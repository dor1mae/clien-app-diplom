{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorimae\\\\Documents\\\\\\u0412\\u0423\\u0417\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\\\Diplom\\\\client-app\\\\src\\\\providers\\\\AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { React, useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (login, password) => {\n    const response = await fetch(`http://localhost:5004/api/user/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Login: login,\n        Password: password,\n        Nickname: \"\",\n        Email: \"\"\n      })\n    });\n    const data = await response.json();\n    if (data.token) {\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n    }\n    return data;\n  };\n  const registration = async (login, password, nickname, email) => {\n    const response = await fetch(`http://localhost:5004/api/user/newuser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Login: login,\n        Password: password,\n        Nickname: nickname,\n        Email: email\n      })\n    });\n    const data = await response.json();\n    return data;\n  };\n  const getUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:5004/api/user/user`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      return data;\n    } catch (e) {\n      return e;\n    }\n  };\n  const logout = () => {\n    localStorage.setItem(\"isAuthenticated\", \"false\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      logout,\n      getUser,\n      user,\n      setUser,\n      registration\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","password","response","fetch","method","headers","body","JSON","stringify","Login","Password","Nickname","Email","data","json","token","localStorage","setItem","registration","nickname","email","getUser","credentials","e","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","$RefreshReg$"],"sources":["C:/Users/dorimae/Documents/ВУЗ/Диплом/Diplom/client-app/src/providers/AuthProvider.js"],"sourcesContent":["import {React, useState, createContext, useContext} from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const AuthProvider = ({children}) =>\r\n{\r\n    const [user, setUser] = useState(null)\r\n\r\n    const login = async (login, password) =>\r\n    {\r\n        const response = await fetch(`http://localhost:5004/api/user/login`, {\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({Login: login, Password: password, Nickname:\"\", Email:\"\"})\r\n        })\r\n        const data = await response.json()\r\n        if(data.token)\r\n        {\r\n            localStorage.setItem(\"isAuthenticated\", \"true\")\r\n        }\r\n        return data\r\n    }\r\n\r\n    const registration = async (login, password, nickname, email) =>\r\n    {\r\n        const response = await fetch(`http://localhost:5004/api/user/newuser`, {\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({Login: login, Password: password, Nickname:nickname, Email:email})\r\n        })\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n\r\n    const getUser = async () =>\r\n    {\r\n        try{\r\n            const response = await fetch(`http://localhost:5004/api/user/user`, {\r\n                method:'GET',\r\n                credentials:'include'\r\n            })\r\n            const data = await response.json()\r\n            return data\r\n        }\r\n        catch(e)\r\n        {\r\n            return e\r\n        }\r\n    }\r\n\r\n    const logout = () =>\r\n    {\r\n        localStorage.setItem(\"isAuthenticated\", \"false\")\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{ login, logout, getUser, \r\n                                        user, setUser, \r\n                                        registration}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuthContext = () => useContext(AuthContext)"],"mappings":";;;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KACvC;EAAAC,EAAA;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,KAAK,GAAG,MAAAA,CAAOA,KAAK,EAAEC,QAAQ,KACpC;IACI,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,KAAK,EAAET,KAAK;QAAEU,QAAQ,EAAET,QAAQ;QAAEU,QAAQ,EAAC,EAAE;QAAEC,KAAK,EAAC;MAAE,CAAC;IAClF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,IAAGD,IAAI,CAACE,KAAK,EACb;MACIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IACnD;IACA,OAAOJ,IAAI;EACf,CAAC;EAED,MAAMK,YAAY,GAAG,MAAAA,CAAOlB,KAAK,EAAEC,QAAQ,EAAEkB,QAAQ,EAAEC,KAAK,KAC5D;IACI,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACnEC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,KAAK,EAAET,KAAK;QAAEU,QAAQ,EAAET,QAAQ;QAAEU,QAAQ,EAACQ,QAAQ;QAAEP,KAAK,EAACQ;MAAK,CAAC;IAC3F,CAAC,CAAC;IACF,MAAMP,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC;EAED,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAChB;IACI,IAAG;MACC,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAC,KAAK;QACZkB,WAAW,EAAC;MAChB,CAAC,CAAC;MACF,MAAMT,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC,CACD,OAAMU,CAAC,EACP;MACI,OAAOA,CAAC;IACZ;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KACf;IACIR,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC;EACpD,CAAC;EAED,oBACIxB,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,KAAK;MAAEwB,MAAM;MAAEH,OAAO;MACrBvB,IAAI;MAAEC,OAAO;MACbmB;IAAY,CAAE;IAAAtB,QAAA,EACzCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAjC,EAAA,CA9DYF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAgEzB,OAAO,MAAMqC,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACG,WAAW,CAAC;AAAA;AAAAuC,GAAA,CAA9CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
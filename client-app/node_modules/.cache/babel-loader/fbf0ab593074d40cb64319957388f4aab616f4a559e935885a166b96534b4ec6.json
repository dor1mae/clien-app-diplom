{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorimae\\\\Documents\\\\\\u041B\\u0438\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\Diplom\\\\client-app\\\\src\\\\components\\\\Header\\\\ThemeButton\\\\ThemeButton.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport react from 'react';\nimport { ThemeContext } from '../../../providers/ThemeProvider/ThemeProvider';\nimport { ReactComponent as LightTheme } from '../../icons/light.svg';\nimport { ReactComponent as DarkTheme } from '../../icons/dark.svg';\nimport './ThemeButton.css';\nimport '../../Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeButton = () => {\n  _s();\n  const [theme, setTheme] = useContext(ThemeContext);\n  const changeTheme = () => {\n    setTheme(theme == 'dark' ? 'light' : 'dark');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"theme-button\",\n    onClick: changeTheme,\n    children: theme == \"dark\" && /*#__PURE__*/_jsxDEV(DarkTheme, {\n      className: \"theme-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) || theme == 'light' && /*#__PURE__*/_jsxDEV(LightTheme, {\n      className: \"theme-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeButton, \"MdZKBHIsk7njl4oTUEJB8i+KqJ0=\");\n_c = ThemeButton;\nexport default ThemeButton;\nvar _c;\n$RefreshReg$(_c, \"ThemeButton\");","map":{"version":3,"names":["useState","useEffect","useContext","react","ThemeContext","ReactComponent","LightTheme","DarkTheme","jsxDEV","_jsxDEV","ThemeButton","_s","theme","setTheme","changeTheme","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dorimae/Documents/Личные проекты/Diplom/client-app/src/components/Header/ThemeButton/ThemeButton.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react'\r\nimport react from 'react'\r\nimport { ThemeContext } from '../../../providers/ThemeProvider/ThemeProvider'\r\nimport {ReactComponent as LightTheme} from '../../icons/light.svg'\r\nimport {ReactComponent as DarkTheme} from '../../icons/dark.svg'\r\nimport './ThemeButton.css'\r\nimport '../../Main.css'\r\n\r\n\r\nconst ThemeButton = () =>\r\n{\r\n    const [theme, setTheme] = useContext(ThemeContext)\r\n\r\n    const changeTheme = () =>\r\n    {\r\n        setTheme(theme == 'dark' ? 'light' : 'dark')\r\n    }\r\n\r\n    return(\r\n        <button className='theme-button' onClick={changeTheme}>\r\n            {(theme == \"dark\" &&\r\n            (\r\n                <DarkTheme className='theme-icon'>\r\n\r\n                </DarkTheme>\r\n            )) ||\r\n            (theme == 'light' &&\r\n            (\r\n                <LightTheme className='theme-icon'>\r\n\r\n                </LightTheme>\r\n            ))}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ThemeButton;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,gDAAgD;AAC7E,SAAQC,cAAc,IAAIC,UAAU,QAAO,uBAAuB;AAClE,SAAQD,cAAc,IAAIE,SAAS,QAAO,sBAAsB;AAChE,OAAO,mBAAmB;AAC1B,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,WAAW,GAAGA,CAAA,KACpB;EAAAC,EAAA;EACI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACE,YAAY,CAAC;EAElD,MAAMU,WAAW,GAAGA,CAAA,KACpB;IACID,QAAQ,CAACD,KAAK,IAAI,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAChD,CAAC;EAED,oBACIH,OAAA;IAAQM,SAAS,EAAC,cAAc;IAACC,OAAO,EAAEF,WAAY;IAAAG,QAAA,EAChDL,KAAK,IAAI,MAAM,iBAEbH,OAAA,CAACF,SAAS;MAACQ,SAAS,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CACd,IACAT,KAAK,IAAI,OAAO,iBAEbH,OAAA,CAACH,UAAU;MAACS,SAAS,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAAAV,EAAA,CAzBKD,WAAW;AAAAY,EAAA,GAAXZ,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}